services:

    nginx:
        image: webdevops/nginx:alpine
        restart: unless-stopped
        container_name: ${APP_NAME}__nginx
        hostname: ${APP_NAME}__nginx
        ports:
            - ${DOCKER_ADDRESS}:80:80
            - ${DOCKER_ADDRESS}:443:443
        environment:
            WEB_DOCUMENT_ROOT: /app/public
            WEB_PHP_SOCKET: ${APP_NAME}__php:9000
            LOG_STDOUT: /app/storage/logs/web.access.log
            LOG_STDERR: /app/storage/logs/web.errors.log
        volumes:
            - ./:/app
        working_dir: /app
        depends_on:
            - php

    php:
        build: ./docker/local/php/
        restart: unless-stopped
        container_name: ${APP_NAME}__php
        hostname: ${APP_NAME}__php
        working_dir: /app
        volumes:
            - ./:/app/
            - ./storage/framework/tmp:/tmp
            - ./docker/local/php/.bashrc:/root/.bashrc
            - ./docker/local/php/.bashrc:/home/appuser/.bashrc
            - ./docker/local/php/.bash_aliases:/root/.bash_aliases
            - ./docker/local/php/.bash_aliases:/home/appuser/.bash_aliases
        environment:
            TERM: xterm-256color
            COMPOSER_ALLOW_SUPERUSER: 1
            XDEBUG_CONFIG: "client_host=${DOCKER_ADDRESS}"
            PHP_IDE_CONFIG: "serverName=${APP_NAME}"
        ports:
            - ${DOCKER_ADDRESS}:6001:6001
            - ${DOCKER_ADDRESS}:8000:8000
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
    #        entrypoint: ["/bin/bash", "/var/www/html/docker/bin/php_start.sh"]

    db:
        image: postgis/postgis:16-3.4-alpine
        container_name: ${APP_NAME}__db
        hostname: ${APP_NAME}__db
        restart: unless-stopped
        ports:
            - ${DOCKER_ADDRESS}:${DB_PORT}:${DB_PORT}
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - db_data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}
            interval: 5s
            timeout: 10s
            retries: 20

    redis:
        image: redis:7.2.4-alpine
        restart: unless-stopped
        container_name: ${APP_NAME}__redis
        hostname: ${APP_NAME}__redis
        command:
            - 'redis-server'
            - '--requirepass ${REDIS_PASSWORD}'
        volumes:
            - redis_data:/data
        ports:
            - ${DOCKER_ADDRESS}:${REDIS_PORT}:${REDIS_PORT}
        healthcheck:
            test: redis-cli ping
            interval: 5s
            timeout: 10s
            retries: 20

# @see https://hub.docker.com/r/mailhog/mailhog/
    mailer:
        image: mailhog/mailhog
        container_name: ${APP_NAME}__mailer
        hostname: ${APP_NAME}__mailer
        ports:
            - ${DOCKER_ADDRESS}:8025:8025
            - ${DOCKER_ADDRESS}:1025:1025
        healthcheck:
            test: [ "CMD", "echo | telnet 127.0.0.1 8025" ]
            interval: 1m30s
            timeout: 5s
            retries: 3

volumes:
    db_data:
        driver: local
        name: ${APP_NAME}__db_data
    redis_data:
        driver: local
        name: ${APP_NAME}__redis_data

networks:
    default:
        driver: bridge
        ipam:
            config:
                - subnet: ${DOCKER_NETWORK}


